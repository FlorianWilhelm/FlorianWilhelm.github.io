<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Florian Wilhelm - talk</title><link href="http://www.florianwilhelm.info/" rel="alternate"></link><link href="http://www.florianwilhelm.info/feeds/talk.atom.xml" rel="self"></link><id>http://www.florianwilhelm.info/</id><updated>2017-07-02T18:00:00+02:00</updated><entry><title>“Which car fits my life?” - mobile.de’s approach to recommendations</title><link href="http://www.florianwilhelm.info/2017/07/which_car_fits_my_life/" rel="alternate"></link><published>2017-07-02T18:00:00+02:00</published><updated>2017-07-02T18:00:00+02:00</updated><author><name>Florian Wilhelm</name></author><id>tag:www.florianwilhelm.info,2017-07-02:/2017/07/which_car_fits_my_life/</id><summary type="html">&lt;p&gt;At mobile.de, Germany’s biggest car marketplace, a dedicated team of data engineers and scientists, supported by the &lt;span class="caps"&gt;IT&lt;/span&gt; project house inovex is responsible for creating intelligent data products. Driven by our company slogan “Find the car that fits your life”, we focus on personalised recommendations to address several …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At mobile.de, Germany’s biggest car marketplace, a dedicated team of data engineers and scientists, supported by the &lt;span class="caps"&gt;IT&lt;/span&gt; project house inovex is responsible for creating intelligent data products. Driven by our company slogan “Find the car that fits your life”, we focus on personalised recommendations to address several user needs. Thereby we improve customer experience during browsing as well as finding the perfect offering. In an introduction to recommendation systems, we briefly mention the traditional approaches for recommendation engines, thereby motivating the need for sophisticated approaches. In particular, we explain the different concepts including collaborative and content-based filtering as well as hybrid approaches and general matrix factorisation methods. This is followed by a deep dive into the implementation and architecture at mobile.de that comprises ElasticSearch, Cassandra and Mahout. We explain how Python and Java is used simultaneously to create and serve&amp;nbsp;recommendations.&lt;/p&gt;
&lt;p&gt;By presenting our car-model recommender that suggests similar car models of different brands as a concrete use-case, we reiterate on key-aspects during modelling and implementation. In particular, we present a matrix factorisation library that we used and share our experiences with it. We conclude by a brief demonstration of our results and discuss the improvements we achieved in terms of key performance indicators. Furthermore, we use our use case to exemplify the usage of deep learning for recommendations, comparing it with other traditional approaches and hence providing a brief account of the future of recommendation&amp;nbsp;engines.&lt;/p&gt;
&lt;p&gt;This talk was presented at &lt;a href="https://pydata.org/berlin2017/schedule/presentation/33/"&gt;PyData 2017 Berlin&lt;/a&gt; and &lt;a href="https://www.codetalks.de/de/2017/programm/which-car-fits-my-life-mobile-de-s-approach-to-recommendations"&gt;code.talks 2017&lt;/a&gt;. The slides are are available on &lt;a href="https://www.slideshare.net/FlorianWilhelm2/which-car-fits-my-life-pydata-berlin-2017"&gt;SlideShare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/v7MBunqwBSY'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="machine-learning"></category><category term="python"></category><category term="recommendation system"></category></entry><entry><title>Handling GPS Data with Python</title><link href="http://www.florianwilhelm.info/2016/07/handling_gps_data_with_python/" rel="alternate"></link><published>2016-07-22T11:15:00+02:00</published><updated>2016-07-22T11:15:00+02:00</updated><author><name>Florian Wilhelm</name></author><id>tag:www.florianwilhelm.info,2016-07-22:/2016/07/handling_gps_data_with_python/</id><summary type="html">&lt;p&gt;This talk presented at the &lt;a href="https://ep2016.europython.eu/conference/talks/handling-gps-data-with-python"&gt;EuroPython 2016&lt;/a&gt; introduces several Python libraries related to the handling of &lt;span class="caps"&gt;GPS&lt;/span&gt; data. The slides of this talk are available on &lt;a href="https://github.com/FlorianWilhelm/gps_data_with_python"&gt;Github&lt;/a&gt; or on &lt;a href="http://nbviewer.jupyter.org/format/slides/github/FlorianWilhelm/gps_data_with_python/blob/master/talk.ipynb#/"&gt;nbviewer&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This talk presented at the &lt;a href="https://ep2016.europython.eu/conference/talks/handling-gps-data-with-python"&gt;EuroPython 2016&lt;/a&gt; introduces several Python libraries
related to the handling of &lt;span class="caps"&gt;GPS&lt;/span&gt; data. The slides of this talk are available on
&lt;a href="https://github.com/FlorianWilhelm/gps_data_with_python"&gt;Github&lt;/a&gt; or on &lt;a href="http://nbviewer.jupyter.org/format/slides/github/FlorianWilhelm/gps_data_with_python/blob/master/talk.ipynb#/"&gt;nbviewer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have ever happened to need to deal with &lt;span class="caps"&gt;GPS&lt;/span&gt; data in Python you may have
felt a bit lost. There are many libraries at various states of maturity and scope.
Finding a place to start and to actually work with the &lt;span class="caps"&gt;GPS&lt;/span&gt; data might not be as
easy and obvious as you might expect from other Python&amp;nbsp;domains.&lt;/p&gt;
&lt;p&gt;Inspired from my own experiences of dealing with &lt;span class="caps"&gt;GPS&lt;/span&gt; data in Python, I want to
give an overview of some useful libraries. From basic reading and writing &lt;span class="caps"&gt;GPS&lt;/span&gt;
tracks in the &lt;span class="caps"&gt;GPS&lt;/span&gt; Exchange Format with the help of gpxpy to adding missing
elevation information with srtm.py. Additionally, I will cover mapping and
visualising tracks on OpenStreetmap with mplleaflet that even supports
interactive plots in a Jupyter&amp;nbsp;notebook.&lt;/p&gt;
&lt;p&gt;Besides the tooling, I will also demonstrate and explain common algorithms like
Douglas-Peucker to simplify a track and the famous Kalman filters for smoothing.
For both algorithms I will give an intuition about how they work as well as their
basic mathematical concepts. Especially the Kalman filter that is used for all
kinds of sensor, not only &lt;span class="caps"&gt;GPS&lt;/span&gt;, has the reputation of being hard to understand.
Still, its concept is really easy and quite comprehensible as I will also
demonstrate by presenting an implementation in Python with the help of Numpy and
Scipy. My presentation will make heavy use of the Jupyter notebook which is a
wonderful tool perfectly suited for experimenting and&amp;nbsp;learning.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/9Q8nEA_0ccg'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="python"></category><category term="jupyter"></category><category term="kalman"></category><category term="gps"></category></entry><entry><title>Explaining the Idea behind ARD and Bayesian Interpolation</title><link href="http://www.florianwilhelm.info/2016/03/explaining_the_idea_behind_ard/" rel="alternate"></link><published>2016-03-13T22:00:00+01:00</published><updated>2016-03-13T22:00:00+01:00</updated><author><name>Florian Wilhelm</name></author><id>tag:www.florianwilhelm.info,2016-03-13:/2016/03/explaining_the_idea_behind_ard/</id><summary type="html">&lt;p&gt;This talk presented at the &lt;a href="http://pydata.org/amsterdam2016/schedule/presentation/17/"&gt;PyData Amsterdam 2016&lt;/a&gt; explains the idea of Bayesian
model selection techniques, especially the Automatic Relevance Determination.
The slides of this talk are available on &lt;a href="http://www.slideshare.net/FlorianWilhelm2/explaining-the-idea-behind-automatic-relevance-determination-and-bayesian-interpolation-59498957"&gt;SlideShare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Even in the era of Big Data there are many real-world problems where the number
of input features has about …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This talk presented at the &lt;a href="http://pydata.org/amsterdam2016/schedule/presentation/17/"&gt;PyData Amsterdam 2016&lt;/a&gt; explains the idea of Bayesian
model selection techniques, especially the Automatic Relevance Determination.
The slides of this talk are available on &lt;a href="http://www.slideshare.net/FlorianWilhelm2/explaining-the-idea-behind-automatic-relevance-determination-and-bayesian-interpolation-59498957"&gt;SlideShare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Even in the era of Big Data there are many real-world problems where the number
of input features has about the some order of magnitude than the number of samples.
Often many of those input features are irrelevant and thus inferring the relevant
ones is an important problem in order to prevent over-fitting. Automatic Relevance
Determination solves this problem by applying Bayesian&amp;nbsp;techniques.&lt;/p&gt;
&lt;p&gt;In order to motivate Automatic Relevance Determination (&lt;span class="caps"&gt;ARD&lt;/span&gt;) an intuition for
the problem of choosing a complex model that fits the data well vs a simple model
that generalizes well is established. Thereby the idea behind Occam&amp;#8217;s razor is
presented as a way of balancing bias and variance. This leads us to the mathematical
framework of Bayesian interpolation and model selection to choose between different
models based on the&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;To derive &lt;span class="caps"&gt;ARD&lt;/span&gt; as gently as possible the mathematical basics of a simple linear model
are repeated as well as the idea of regularization to prevent over-fitting.
Based on that, the Bayesian Ridge Regression (BayesianRidge in Scikit-Learn) is
introduced. Generalizing the concept of Bayesian Ridge Regression even more gets
us eventually to the the idea behind &lt;span class="caps"&gt;ARD&lt;/span&gt; (ARDRegression in&amp;nbsp;Scikit-Learn).&lt;/p&gt;
&lt;p&gt;With the help of a practical example, we consolidate what has been learned so far
and compare &lt;span class="caps"&gt;ARD&lt;/span&gt; to an ordinary least square model. Now we dive deep into the
mathematics of &lt;span class="caps"&gt;ARD&lt;/span&gt; and present the algorithm that solves the minimization problem
of &lt;span class="caps"&gt;ARD&lt;/span&gt;. Finally, some details of Scikit-Learn&amp;#8217;s &lt;span class="caps"&gt;ARD&lt;/span&gt; implementation are&amp;nbsp;discussed.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/2gT-Q0NZzoE'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="scikit-learn"></category><category term="machine-learning"></category><category term="bayesian"></category></entry><entry><title>How to write a friendly reminder bot</title><link href="http://www.florianwilhelm.info/2015/07/howto_write_a_friendly_reminder_bot/" rel="alternate"></link><published>2015-07-24T12:30:00+02:00</published><updated>2015-12-22T19:30:00+01:00</updated><author><name>Florian Wilhelm</name></author><id>tag:www.florianwilhelm.info,2015-07-24:/2015/07/howto_write_a_friendly_reminder_bot/</id><summary type="html">&lt;p&gt;In this presentation given at the &lt;a href="https://ep2015.europython.eu/"&gt;EuroPython 2015&lt;/a&gt; in Bilbao,
I show how the &lt;a href="https://github.com/tdryer/hangups"&gt;hangups&lt;/a&gt; library can be used
in order to write a small chatbot that connects to Google Hangouts
and reminds you or someone else to take his/her medication.
The secure and recommended OAuth2 protocol is used …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this presentation given at the &lt;a href="https://ep2015.europython.eu/"&gt;EuroPython 2015&lt;/a&gt; in Bilbao,
I show how the &lt;a href="https://github.com/tdryer/hangups"&gt;hangups&lt;/a&gt; library can be used
in order to write a small chatbot that connects to Google Hangouts
and reminds you or someone else to take his/her medication.
The secure and recommended OAuth2 protocol is used to authorize the bot application
in the Google Developers Console in order to access the Google+ Hangouts &lt;span class="caps"&gt;API&lt;/span&gt;.
Subsequently, I explain how to use an event-driven library to write a bot
that sends scheduled messages, waits for a proper reply and repeats the question if need be.
Thereby, a primer on event-driven, asynchronous architectures is&amp;nbsp;given.&lt;/p&gt;
&lt;p&gt;The source code can be downloaded on &lt;a href="https://github.com/blue-yonder/medbot"&gt;GitHub&lt;/a&gt;
and the slides are available as &lt;a href="http://htmlpreview.github.io/?https://github.com/blue-yonder/medbot/blob/master/medbot.slides.html?theme=solarized#/"&gt;html preview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/ztfdv9jcxtw'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="python"></category><category term="google hangouts"></category><category term="asyncio"></category><category term="event-driven"></category><category term="asynchronous"></category></entry><entry><title>Extending Scikit-Learn with your own regressor</title><link href="http://www.florianwilhelm.info/2014/07/extending_scikit-learn_with_your_own_regressor/" rel="alternate"></link><published>2014-07-25T12:00:00+02:00</published><updated>2015-12-22T19:30:00+01:00</updated><author><name>Florian Wilhelm</name></author><id>tag:www.florianwilhelm.info,2014-07-25:/2014/07/extending_scikit-learn_with_your_own_regressor/</id><summary type="html">&lt;p&gt;&lt;a href="http://scikit-learn.org/"&gt;Scikit-Learn&lt;/a&gt; is a well-known and popular framework for
machine learning that is used by Data Scientists all over the world.
In this tutorial presented at the &lt;a href="https://ep2014.europython.eu/"&gt;EuroPython 2014&lt;/a&gt; in Berlin,
I show in a practical way how you can add your own estimator following the interfaces of Scikit-Learn.
First a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://scikit-learn.org/"&gt;Scikit-Learn&lt;/a&gt; is a well-known and popular framework for
machine learning that is used by Data Scientists all over the world.
In this tutorial presented at the &lt;a href="https://ep2014.europython.eu/"&gt;EuroPython 2014&lt;/a&gt; in Berlin,
I show in a practical way how you can add your own estimator following the interfaces of Scikit-Learn.
First a small introduction to the design of Scikit-Learn and its inner workings is given.
Then I show how easily Scikit-Learn can be extended by creating an own estimator.
In order to demonstrate this, I extend Scikit-Learn by the popular and robust
&lt;a href="http://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator"&gt;Theil-Sen Estimator&lt;/a&gt;
that was not in Scikit-Learn until version 0.16.
I also motivate this estimator by outlining some of its superior properties compared
to the ordinary least squares method (LinearRegression in&amp;nbsp;Scikit-Learn).&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/u2tnvWyO3U0'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="python"></category><category term="scikit-learn"></category><category term="machine-learning"></category></entry></feed>