<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Florian Wilhelm - talk</title><link href="https://florianwilhelm.info/" rel="alternate"></link><link href="https://florianwilhelm.info/feeds/talk.atom.xml" rel="self"></link><id>https://florianwilhelm.info/</id><updated>2018-07-25T18:00:00+02:00</updated><entry><title>Bridging the Gap: from Data Science to Production</title><link href="https://florianwilhelm.info/2018/07/bridging_the_gap_from_ds_to_prod/" rel="alternate"></link><published>2018-07-25T18:00:00+02:00</published><updated>2018-07-25T18:00:00+02:00</updated><author><name>Florian Wilhelm</name></author><id>tag:florianwilhelm.info,2018-07-25:/2018/07/bridging_the_gap_from_ds_to_prod/</id><summary type="html">&lt;p&gt;A recent but quite common observation in industry is that although there is an overall high adoption of data science, many companies struggle to get it into production. Huge teams of well-payed data scientists often present one fancy model after the other to their managers but their proof of concepts …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A recent but quite common observation in industry is that although there is an overall high adoption of data science, many companies struggle to get it into production. Huge teams of well-payed data scientists often present one fancy model after the other to their managers but their proof of concepts never manifest into something business relevant. The frustration grows on both sides, managers and data&amp;nbsp;scientists.&lt;/p&gt;
&lt;p&gt;In my talk I elaborate on the many reasons why data science to production is such a hard nut to crack. I start with a taxonomy of data use cases in order to easier assess technical requirements. Based thereon, my focus lies on overcoming the two-language-problem which is Python/R loved by data scientists vs. the enterprise-established Java/Scala. From my project experiences I present three different solutions, namely 1) migrating to a single language, 2) reimplementation and 3) usage of a framework. The advantages and disadvantages of each approach is presented and general advices based on the introduced taxonomy is&amp;nbsp;given.&lt;/p&gt;
&lt;p&gt;Additionally, my talk also addresses organisational as well as problems in quality assurance and deployment. Best practices and further references are presented on a high-level in order to cover all facets of data science to&amp;nbsp;production.&lt;/p&gt;
&lt;p&gt;With my talk I hope to convey the message that breakdowns on the road from data science to production are rather the rule than the exception, so you are not alone. At the end of my talk, you will have a better understanding of why your team and you are struggling and what to do about&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;This talk was presented at &lt;a href="https://ep2018.europython.eu/conference/talks/bridging-the-gap-from-data-science-to-production"&gt;EuroPython 2018&lt;/a&gt; and the slides are available on &lt;a href="https://www.slideshare.net/FlorianWilhelm2/bridging-the-gap-from-data-science-to-production"&gt;SlideShare&lt;/a&gt;. The video below shows the whole session with my talk starting at &lt;a href="https://youtu.be/XRKPOtbU6UE?t=51m23s"&gt;51m23s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/XRKPOtbU6UE?t=51m23s'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="python"></category><category term="data science"></category><category term="production"></category></entry><entry><title>How mobile.de brings Data Science to Production for a Personalized Web Experience</title><link href="https://florianwilhelm.info/2018/07/how_mobilede_brings_ds_to_prod_for_a_personalized_web_experience/" rel="alternate"></link><published>2018-07-07T18:00:00+02:00</published><updated>2018-07-07T18:00:00+02:00</updated><author><name>Florian Wilhelm</name></author><id>tag:florianwilhelm.info,2018-07-07:/2018/07/how_mobilede_brings_ds_to_prod_for_a_personalized_web_experience/</id><summary type="html">&lt;p&gt;As Germany&amp;#8217;s biggest online car marketplace, mobile.de provides a personalized web experience. Our Data Team leverages the interactions of our users to infer their preferences. For this tasks we often apply Python and Spark to wrangle massive amounts of data. In this talk, we are going to present …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As Germany&amp;#8217;s biggest online car marketplace, mobile.de provides a personalized web experience. Our Data Team leverages the interactions of our users to infer their preferences. For this tasks we often apply Python and Spark to wrangle massive amounts of data. In this talk, we are going to present our personalization use-cases as well as the application of PySpark in&amp;nbsp;production.&lt;/p&gt;
&lt;p&gt;After a short introduction we will present various data use cases that where tackled by mobile.de, Germany&amp;#8217;s largest vehicle marketplace online, in the last two years. In a combined endeavour inovex, an &lt;span class="caps"&gt;IT&lt;/span&gt; project house with a strong focus on digitalization, has supported mobile.de on this&amp;nbsp;voyage.&lt;/p&gt;
&lt;p&gt;Personalized web experience is a commonly used term in e-commerce that is hard to grasp. Thus, we illustrate how mobile.de understands personalized web experience and outline its features as well as opportunities. In more detail, we will elaborate on the Bayesian framework that we use to approximate user preferences. Furthermore, we discuss the modelling of user intent and how this can be used to understand the buyer&amp;#8217;s&amp;nbsp;journey.&lt;/p&gt;
&lt;p&gt;Besides the data science and modelling aspects of the use cases we will also dive into the technical details and how we solved them with the help of Python and Spark (PySpark). In more detail we will address the implementation of efficient User-Defined-(Aggregation)-Functions with Pandas in PySpark as well as the management of isolated environments and dependencies with&amp;nbsp;PySpark.&lt;/p&gt;
&lt;p&gt;We will conclude our talk with the benefits of a personalized web experience for the users of mobile.de which was achieved with the help of Python and PySpark in&amp;nbsp;production.&lt;/p&gt;
&lt;p&gt;This talk was presented at &lt;a href="https://pydata.org/berlin2018/schedule/presentation/59/"&gt;PyData 2018 Berlin&lt;/a&gt; together with my colleague Markus Schüler from &lt;a href="https://www.mobile.de/"&gt;mobile.de&lt;/a&gt; and the slides are available on &lt;a href="https://www.slideshare.net/FlorianWilhelm2/how-mobilede-brings-data-science-to-production-for-a-personalized-web-experience"&gt;SlideShare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/fFiI6HABW-0'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="python"></category><category term="data science"></category><category term="production"></category></entry><entry><title>“Which car fits my life?” - mobile.de’s approach to recommendations</title><link href="https://florianwilhelm.info/2017/07/which_car_fits_my_life/" rel="alternate"></link><published>2017-07-02T18:00:00+02:00</published><updated>2017-07-02T18:00:00+02:00</updated><author><name>Florian Wilhelm</name></author><id>tag:florianwilhelm.info,2017-07-02:/2017/07/which_car_fits_my_life/</id><summary type="html">&lt;p&gt;At mobile.de, Germany’s biggest car marketplace, a dedicated team of data engineers and scientists, supported by the &lt;span class="caps"&gt;IT&lt;/span&gt; project house inovex is responsible for creating intelligent data products. Driven by our company slogan “Find the car that fits your life”, we focus on personalised recommendations to address several …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At mobile.de, Germany’s biggest car marketplace, a dedicated team of data engineers and scientists, supported by the &lt;span class="caps"&gt;IT&lt;/span&gt; project house inovex is responsible for creating intelligent data products. Driven by our company slogan “Find the car that fits your life”, we focus on personalised recommendations to address several user needs. Thereby we improve customer experience during browsing as well as finding the perfect offering. In an introduction to recommendation systems, we briefly mention the traditional approaches for recommendation engines, thereby motivating the need for sophisticated approaches. In particular, we explain the different concepts including collaborative and content-based filtering as well as hybrid approaches and general matrix factorisation methods. This is followed by a deep dive into the implementation and architecture at mobile.de that comprises ElasticSearch, Cassandra and Mahout. We explain how Python and Java is used simultaneously to create and serve&amp;nbsp;recommendations.&lt;/p&gt;
&lt;p&gt;By presenting our car-model recommender that suggests similar car models of different brands as a concrete use-case, we reiterate on key-aspects during modelling and implementation. In particular, we present a matrix factorisation library that we used and share our experiences with it. We conclude by a brief demonstration of our results and discuss the improvements we achieved in terms of key performance indicators. Furthermore, we use our use case to exemplify the usage of deep learning for recommendations, comparing it with other traditional approaches and hence providing a brief account of the future of recommendation&amp;nbsp;engines.&lt;/p&gt;
&lt;p&gt;This talk was presented at &lt;a href="https://pydata.org/berlin2017/schedule/presentation/33/"&gt;PyData 2017 Berlin&lt;/a&gt; and &lt;a href="https://www.codetalks.de/de/2017/programm/which-car-fits-my-life-mobile-de-s-approach-to-recommendations"&gt;code.talks 2017&lt;/a&gt;. The slides are available on &lt;a href="https://www.slideshare.net/FlorianWilhelm2/which-car-fits-my-life-pydata-berlin-2017"&gt;SlideShare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/v7MBunqwBSY'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="machine-learning"></category><category term="python"></category><category term="recommendation system"></category></entry><entry><title>Handling GPS Data with Python</title><link href="https://florianwilhelm.info/2016/07/handling_gps_data_with_python/" rel="alternate"></link><published>2016-07-22T11:15:00+02:00</published><updated>2016-07-22T11:15:00+02:00</updated><author><name>Florian Wilhelm</name></author><id>tag:florianwilhelm.info,2016-07-22:/2016/07/handling_gps_data_with_python/</id><summary type="html">&lt;p&gt;This talk presented at the &lt;a href="https://ep2016.europython.eu/conference/talks/handling-gps-data-with-python"&gt;EuroPython 2016&lt;/a&gt; introduces several Python libraries related to the handling of &lt;span class="caps"&gt;GPS&lt;/span&gt; data. The slides of this talk are available on &lt;a href="https://github.com/FlorianWilhelm/gps_data_with_python"&gt;Github&lt;/a&gt; or on &lt;a href="http://nbviewer.jupyter.org/format/slides/github/FlorianWilhelm/gps_data_with_python/blob/master/talk.ipynb#/"&gt;nbviewer&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This talk presented at the &lt;a href="https://ep2016.europython.eu/conference/talks/handling-gps-data-with-python"&gt;EuroPython 2016&lt;/a&gt; introduces several Python libraries
related to the handling of &lt;span class="caps"&gt;GPS&lt;/span&gt; data. The slides of this talk are available on
&lt;a href="https://github.com/FlorianWilhelm/gps_data_with_python"&gt;Github&lt;/a&gt; or on &lt;a href="http://nbviewer.jupyter.org/format/slides/github/FlorianWilhelm/gps_data_with_python/blob/master/talk.ipynb#/"&gt;nbviewer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have ever happened to need to deal with &lt;span class="caps"&gt;GPS&lt;/span&gt; data in Python you may have
felt a bit lost. There are many libraries at various states of maturity and scope.
Finding a place to start and to actually work with the &lt;span class="caps"&gt;GPS&lt;/span&gt; data might not be as
easy and obvious as you might expect from other Python&amp;nbsp;domains.&lt;/p&gt;
&lt;p&gt;Inspired from my own experiences of dealing with &lt;span class="caps"&gt;GPS&lt;/span&gt; data in Python, I want to
give an overview of some useful libraries. From basic reading and writing &lt;span class="caps"&gt;GPS&lt;/span&gt;
tracks in the &lt;span class="caps"&gt;GPS&lt;/span&gt; Exchange Format with the help of &lt;a href="https://github.com/tkrajina/gpxpy"&gt;gpxpy&lt;/a&gt; to adding missing
elevation information with &lt;a href="https://github.com/tkrajina/srtm.py"&gt;srtm.py&lt;/a&gt;. Additionally, I will cover mapping and
visualising tracks on &lt;a href="https://www.openstreetmap.org/"&gt;OpenStreetmap&lt;/a&gt; with &lt;a href="https://github.com/jwass/mplleaflet"&gt;mplleaflet&lt;/a&gt; that even supports
interactive plots in a Jupyter&amp;nbsp;notebook.&lt;/p&gt;
&lt;p&gt;Besides the tooling, I will also demonstrate and explain common algorithms like
Douglas-Peucker to simplify a track and the famous Kalman filters for smoothing.
For both algorithms I will give an intuition about how they work as well as their
basic mathematical concepts. Especially the Kalman filter that is used for all
kinds of sensor, not only &lt;span class="caps"&gt;GPS&lt;/span&gt;, has the reputation of being hard to understand.
Still, its concept is really easy and quite comprehensible as I will also
demonstrate by presenting an implementation in Python with the help of Numpy and
Scipy. My presentation will make heavy use of the Jupyter notebook which is a
wonderful tool perfectly suited for experimenting and&amp;nbsp;learning.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/9Q8nEA_0ccg'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="python"></category><category term="jupyter"></category><category term="kalman"></category><category term="gps"></category></entry><entry><title>Explaining the Idea behind ARD and Bayesian Interpolation</title><link href="https://florianwilhelm.info/2016/03/explaining_the_idea_behind_ard/" rel="alternate"></link><published>2016-03-13T22:00:00+01:00</published><updated>2016-03-13T22:00:00+01:00</updated><author><name>Florian Wilhelm</name></author><id>tag:florianwilhelm.info,2016-03-13:/2016/03/explaining_the_idea_behind_ard/</id><summary type="html">&lt;p&gt;This talk presented at the &lt;a href="http://pydata.org/amsterdam2016/schedule/presentation/17/"&gt;PyData Amsterdam 2016&lt;/a&gt; explains the idea of Bayesian
model selection techniques, especially the Automatic Relevance Determination.
The slides of this talk are available on &lt;a href="http://www.slideshare.net/FlorianWilhelm2/explaining-the-idea-behind-automatic-relevance-determination-and-bayesian-interpolation-59498957"&gt;SlideShare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Even in the era of Big Data there are many real-world problems where the number
of input features has about …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This talk presented at the &lt;a href="http://pydata.org/amsterdam2016/schedule/presentation/17/"&gt;PyData Amsterdam 2016&lt;/a&gt; explains the idea of Bayesian
model selection techniques, especially the Automatic Relevance Determination.
The slides of this talk are available on &lt;a href="http://www.slideshare.net/FlorianWilhelm2/explaining-the-idea-behind-automatic-relevance-determination-and-bayesian-interpolation-59498957"&gt;SlideShare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Even in the era of Big Data there are many real-world problems where the number
of input features has about the some order of magnitude than the number of samples.
Often many of those input features are irrelevant and thus inferring the relevant
ones is an important problem in order to prevent over-fitting. Automatic Relevance
Determination solves this problem by applying Bayesian&amp;nbsp;techniques.&lt;/p&gt;
&lt;p&gt;In order to motivate Automatic Relevance Determination (&lt;span class="caps"&gt;ARD&lt;/span&gt;) an intuition for
the problem of choosing a complex model that fits the data well vs a simple model
that generalizes well is established. Thereby the idea behind Occam&amp;#8217;s razor is
presented as a way of balancing bias and variance. This leads us to the mathematical
framework of Bayesian interpolation and model selection to choose between different
models based on the&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;To derive &lt;span class="caps"&gt;ARD&lt;/span&gt; as gently as possible the mathematical basics of a simple linear model
are repeated as well as the idea of regularization to prevent over-fitting.
Based on that, the Bayesian Ridge Regression (BayesianRidge in Scikit-Learn) is
introduced. Generalizing the concept of Bayesian Ridge Regression even more gets
us eventually to the the idea behind &lt;span class="caps"&gt;ARD&lt;/span&gt; (ARDRegression in&amp;nbsp;Scikit-Learn).&lt;/p&gt;
&lt;p&gt;With the help of a practical example, we consolidate what has been learned so far
and compare &lt;span class="caps"&gt;ARD&lt;/span&gt; to an ordinary least square model. Now we dive deep into the
mathematics of &lt;span class="caps"&gt;ARD&lt;/span&gt; and present the algorithm that solves the minimization problem
of &lt;span class="caps"&gt;ARD&lt;/span&gt;. Finally, some details of Scikit-Learn&amp;#8217;s &lt;span class="caps"&gt;ARD&lt;/span&gt; implementation are&amp;nbsp;discussed.&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="800" height="500"
                    src='https://www.youtube.com/embed/2gT-Q0NZzoE'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="scikit-learn"></category><category term="machine-learning"></category><category term="bayesian"></category></entry></feed>